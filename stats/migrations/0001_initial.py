# Generated by Django 4.0.6 on 2022-07-07 23:44

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StintInfo',
            fields=[
                ('stint_id', models.TextField(primary_key=True, serialize=False)),
                ('pilot', models.TextField()),
                ('stint', models.IntegerField()),
                ('kart', models.IntegerField()),
                ('laps_amount', models.IntegerField()),
                ('lap_times', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('avg_80', models.FloatField()),
                ('avg_40', models.FloatField()),
            ],
            options={
                'db_table': 'stints_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoardRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('url', models.TextField()),
                ('status', models.IntegerField()),
                ('response', models.TextField()),
                ('response_json', models.JSONField()),
                ('is_processed', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'db_table': 'requests',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Lap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('pilot_name', models.TextField()),
                ('kart', models.IntegerField(db_index=True)),
                ('race_time', models.IntegerField()),
                ('stint', models.IntegerField()),
                ('lap_time', models.FloatField()),
                ('board_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='laps', to='stats.boardrequest')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='laps', to='stats.team')),
            ],
            options={
                'db_table': 'laps',
            },
        ),
        migrations.RunSQL(
            """   
            create materialized view stints_info as (

            with stints as (select string_agg(distinct pilot_name, ' OR ') as pilot,
                                   team_id,
                                   stint,
                                   kart,
                                   count(*)                       as laps_amount,
                                   min(lap_time) as best_lap,
                                   array_agg(lap_time order by lap_time) as lap_times
                            from laps
                            group by team_id, stint, kart)
            select *,
                    concat(team_id, '-', stint) as stint_id,
                   (select avg(m) from unnest(lap_times[:laps_amount * 0.8]) m) as avg_80,
                   (select avg(m) from unnest(lap_times[:laps_amount * 0.4]) m) as avg_40
                   from stints
                )
            """,
            reverse_sql="drop materialized view stints info"
        )
    ]
